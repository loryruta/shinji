#pragma once

#include <string>
#include <unordered_map>

namespace shinji::bundle
{
char const _736861646572732f746573742e76657274[] = { 35,118,101,114,115,105,111,110,32,52,54,48,10,10,108,97,121,111,117,116,40,108,111,99,97,116,105,111,110,32,61,32,48,41,32,105,110,32,118,101,99,51,32,97,95,112,111,115,105,116,105,111,110,59,10,108,97,121,111,117,116,40,108,111,99,97,116,105,111,110,32,61,32,49,41,32,105,110,32,118,101,99,51,32,97,95,110,111,114,109,97,108,59,10,108,97,121,111,117,116,40,108,111,99,97,116,105,111,110,32,61,32,50,41,32,105,110,32,118,101,99,52,32,97,95,99,111,108,111,114,59,10,10,108,97,121,111,117,116,40,108,111,99,97,116,105,111,110,32,61,32,48,41,32,117,110,105,102,111,114,109,32,109,97,116,52,32,117,95,116,114,97,110,115,102,111,114,109,59,10,108,97,121,111,117,116,40,108,111,99,97,116,105,111,110,32,61,32,49,41,32,117,110,105,102,111,114,109,32,109,97,116,52,32,117,95,118,105,101,119,59,10,108,97,121,111,117,116,40,108,111,99,97,116,105,111,110,32,61,32,50,41,32,117,110,105,102,111,114,109,32,109,97,116,52,32,117,95,112,114,111,106,101,99,116,105,111,110,59,10,10,118,111,105,100,32,109,97,105,110,40,41,10,123,10,32,32,32,32,103,108,95,80,111,115,105,116,105,111,110,32,61,32,117,95,112,114,111,106,101,99,116,105,111,110,32,42,32,117,95,118,105,101,119,32,42,32,117,95,116,114,97,110,115,102,111,114,109,32,42,32,118,101,99,52,40,97,95,112,111,115,105,116,105,111,110,44,32,49,46,48,41,59,10,125,10 };
char const _736861646572732f746573742e66726167[] = { 35,118,101,114,115,105,111,110,32,52,54,48,10,10,108,97,121,111,117,116,40,108,111,99,97,116,105,111,110,32,61,32,48,41,32,111,117,116,32,118,101,99,52,32,102,95,99,111,108,111,114,59,10,10,118,111,105,100,32,109,97,105,110,40,41,10,123,10,32,32,32,32,102,95,99,111,108,111,114,32,61,32,118,101,99,52,40,49,44,32,48,44,32,48,44,32,49,41,59,10,125,10 };
char const _736861646572732f746573742e766572742e737076[] = { 3,2,35,7,0,0,1,0,10,0,13,0,44,0,0,0,0,0,0,0,17,0,2,0,1,0,0,0,11,0,6,0,1,0,0,0,71,76,83,76,46,115,116,100,46,52,53,48,0,0,0,0,14,0,3,0,0,0,0,0,1,0,0,0,15,0,11,0,0,0,0,0,4,0,0,0,109,97,105,110,0,0,0,0,13,0,0,0,28,0,0,0,38,0,0,0,40,0,0,0,42,0,0,0,43,0,0,0,3,0,3,0,2,0,0,0,204,1,0,0,4,0,10,0,71,76,95,71,79,79,71,76,69,95,99,112,112,95,115,116,121,108,101,95,108,105,110,101,95,100,105,114,101,99,116,105,118,101,0,0,4,0,8,0,71,76,95,71,79,79,71,76,69,95,105,110,99,108,117,100,101,95,100,105,114,101,99,116,105,118,101,0,5,0,4,0,4,0,0,0,109,97,105,110,0,0,0,0,5,0,6,0,11,0,0,0,103,108,95,80,101,114,86,101,114,116,101,120,0,0,0,0,6,0,6,0,11,0,0,0,0,0,0,0,103,108,95,80,111,115,105,116,105,111,110,0,6,0,7,0,11,0,0,0,1,0,0,0,103,108,95,80,111,105,110,116,83,105,122,101,0,0,0,0,6,0,7,0,11,0,0,0,2,0,0,0,103,108,95,67,108,105,112,68,105,115,116,97,110,99,101,0,6,0,7,0,11,0,0,0,3,0,0,0,103,108,95,67,117,108,108,68,105,115,116,97,110,99,101,0,5,0,3,0,13,0,0,0,0,0,0,0,5,0,6,0,18,0,0,0,117,95,112,114,111,106,101,99,116,105,111,110,0,0,0,0,5,0,4,0,20,0,0,0,117,95,118,105,101,119,0,0,5,0,5,0,23,0,0,0,117,95,116,114,97,110,115,102,111,114,109,0,5,0,5,0,28,0,0,0,97,95,112,111,115,105,116,105,111,110,0,0,5,0,5,0,38,0,0,0,97,95,110,111,114,109,97,108,0,0,0,0,5,0,4,0,40,0,0,0,97,95,99,111,108,111,114,0,5,0,5,0,42,0,0,0,103,108,95,86,101,114,116,101,120,73,68,0,5,0,6,0,43,0,0,0,103,108,95,73,110,115,116,97,110,99,101,73,68,0,0,0,72,0,5,0,11,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,72,0,5,0,11,0,0,0,1,0,0,0,11,0,0,0,1,0,0,0,72,0,5,0,11,0,0,0,2,0,0,0,11,0,0,0,3,0,0,0,72,0,5,0,11,0,0,0,3,0,0,0,11,0,0,0,4,0,0,0,71,0,3,0,11,0,0,0,2,0,0,0,71,0,4,0,18,0,0,0,30,0,0,0,2,0,0,0,71,0,4,0,20,0,0,0,30,0,0,0,1,0,0,0,71,0,4,0,23,0,0,0,30,0,0,0,0,0,0,0,71,0,4,0,28,0,0,0,30,0,0,0,0,0,0,0,71,0,4,0,38,0,0,0,30,0,0,0,1,0,0,0,71,0,4,0,40,0,0,0,30,0,0,0,2,0,0,0,71,0,4,0,42,0,0,0,11,0,0,0,5,0,0,0,71,0,4,0,43,0,0,0,11,0,0,0,6,0,0,0,19,0,2,0,2,0,0,0,33,0,3,0,3,0,0,0,2,0,0,0,22,0,3,0,6,0,0,0,32,0,0,0,23,0,4,0,7,0,0,0,6,0,0,0,4,0,0,0,21,0,4,0,8,0,0,0,32,0,0,0,0,0,0,0,43,0,4,0,8,0,0,0,9,0,0,0,1,0,0,0,28,0,4,0,10,0,0,0,6,0,0,0,9,0,0,0,30,0,6,0,11,0,0,0,7,0,0,0,6,0,0,0,10,0,0,0,10,0,0,0,32,0,4,0,12,0,0,0,3,0,0,0,11,0,0,0,59,0,4,0,12,0,0,0,13,0,0,0,3,0,0,0,21,0,4,0,14,0,0,0,32,0,0,0,1,0,0,0,43,0,4,0,14,0,0,0,15,0,0,0,0,0,0,0,24,0,4,0,16,0,0,0,7,0,0,0,4,0,0,0,32,0,4,0,17,0,0,0,0,0,0,0,16,0,0,0,59,0,4,0,17,0,0,0,18,0,0,0,0,0,0,0,59,0,4,0,17,0,0,0,20,0,0,0,0,0,0,0,59,0,4,0,17,0,0,0,23,0,0,0,0,0,0,0,23,0,4,0,26,0,0,0,6,0,0,0,3,0,0,0,32,0,4,0,27,0,0,0,1,0,0,0,26,0,0,0,59,0,4,0,27,0,0,0,28,0,0,0,1,0,0,0,43,0,4,0,6,0,0,0,30,0,0,0,0,0,128,63,32,0,4,0,36,0,0,0,3,0,0,0,7,0,0,0,59,0,4,0,27,0,0,0,38,0,0,0,1,0,0,0,32,0,4,0,39,0,0,0,1,0,0,0,7,0,0,0,59,0,4,0,39,0,0,0,40,0,0,0,1,0,0,0,32,0,4,0,41,0,0,0,1,0,0,0,14,0,0,0,59,0,4,0,41,0,0,0,42,0,0,0,1,0,0,0,59,0,4,0,41,0,0,0,43,0,0,0,1,0,0,0,54,0,5,0,2,0,0,0,4,0,0,0,0,0,0,0,3,0,0,0,248,0,2,0,5,0,0,0,61,0,4,0,16,0,0,0,19,0,0,0,18,0,0,0,61,0,4,0,16,0,0,0,21,0,0,0,20,0,0,0,146,0,5,0,16,0,0,0,22,0,0,0,19,0,0,0,21,0,0,0,61,0,4,0,16,0,0,0,24,0,0,0,23,0,0,0,146,0,5,0,16,0,0,0,25,0,0,0,22,0,0,0,24,0,0,0,61,0,4,0,26,0,0,0,29,0,0,0,28,0,0,0,81,0,5,0,6,0,0,0,31,0,0,0,29,0,0,0,0,0,0,0,81,0,5,0,6,0,0,0,32,0,0,0,29,0,0,0,1,0,0,0,81,0,5,0,6,0,0,0,33,0,0,0,29,0,0,0,2,0,0,0,80,0,7,0,7,0,0,0,34,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,30,0,0,0,145,0,5,0,7,0,0,0,35,0,0,0,25,0,0,0,34,0,0,0,65,0,5,0,36,0,0,0,37,0,0,0,13,0,0,0,15,0,0,0,62,0,3,0,37,0,0,0,35,0,0,0,253,0,1,0,56,0,1,0 };
char const _736861646572732f746573742e667261672e737076[] = { 3,2,35,7,0,0,1,0,10,0,13,0,13,0,0,0,0,0,0,0,17,0,2,0,1,0,0,0,11,0,6,0,1,0,0,0,71,76,83,76,46,115,116,100,46,52,53,48,0,0,0,0,14,0,3,0,0,0,0,0,1,0,0,0,15,0,6,0,4,0,0,0,4,0,0,0,109,97,105,110,0,0,0,0,9,0,0,0,16,0,3,0,4,0,0,0,8,0,0,0,3,0,3,0,2,0,0,0,204,1,0,0,4,0,10,0,71,76,95,71,79,79,71,76,69,95,99,112,112,95,115,116,121,108,101,95,108,105,110,101,95,100,105,114,101,99,116,105,118,101,0,0,4,0,8,0,71,76,95,71,79,79,71,76,69,95,105,110,99,108,117,100,101,95,100,105,114,101,99,116,105,118,101,0,5,0,4,0,4,0,0,0,109,97,105,110,0,0,0,0,5,0,4,0,9,0,0,0,102,95,99,111,108,111,114,0,71,0,4,0,9,0,0,0,30,0,0,0,0,0,0,0,19,0,2,0,2,0,0,0,33,0,3,0,3,0,0,0,2,0,0,0,22,0,3,0,6,0,0,0,32,0,0,0,23,0,4,0,7,0,0,0,6,0,0,0,4,0,0,0,32,0,4,0,8,0,0,0,3,0,0,0,7,0,0,0,59,0,4,0,8,0,0,0,9,0,0,0,3,0,0,0,43,0,4,0,6,0,0,0,10,0,0,0,0,0,128,63,43,0,4,0,6,0,0,0,11,0,0,0,0,0,0,0,44,0,7,0,7,0,0,0,12,0,0,0,10,0,0,0,11,0,0,0,11,0,0,0,10,0,0,0,54,0,5,0,2,0,0,0,4,0,0,0,0,0,0,0,3,0,0,0,248,0,2,0,5,0,0,0,62,0,3,0,9,0,0,0,12,0,0,0,253,0,1,0,56,0,1,0 };
inline std::unordered_map<std::string, std::pair<char const*, size_t>> const s_src_by_shader{
{ "shaders/test.vert", { _736861646572732f746573742e76657274, sizeof(_736861646572732f746573742e76657274) / sizeof(char) }},
{ "shaders/test.frag", { _736861646572732f746573742e66726167, sizeof(_736861646572732f746573742e66726167) / sizeof(char) }},
{ "shaders/test.vert.spv", { _736861646572732f746573742e766572742e737076, sizeof(_736861646572732f746573742e766572742e737076) / sizeof(char) }},
{ "shaders/test.frag.spv", { _736861646572732f746573742e667261672e737076, sizeof(_736861646572732f746573742e667261672e737076) / sizeof(char) }},
};
inline std::pair<char const*, size_t> load_shader(char const* shader)
{
    return shinji::bundle::s_src_by_shader.at(shader);
}
}

#include <fstream>
#include <stdexcept>
#include <vector>

namespace shinji // loader
{
	inline std::pair<char const*, size_t> load_shader_from_file(char const* shader, std::vector<char>& buf)
	{
		std::ifstream f(shader, std::ios::binary | std::ios::ate);
		if (!f.is_open()) {
			throw std::runtime_error("Could not find shader file.");
		}

		size_t buf_len = (size_t) f.tellg();
		buf.resize(buf_len);

		f.seekg(0);
		f.read(buf.data(), (std::streamsize) buf_len);
		return std::pair<char const*, size_t>(buf.data(), buf_len);
	}

	inline std::pair<char const*, size_t> load_shader_from_bundle(char const* shader)
	{
		return shinji::bundle::load_shader(shader);
	}
}
